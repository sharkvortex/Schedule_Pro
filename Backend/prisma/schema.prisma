// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  member
  admin
}

model User {
  id        Int      @id @default(autoincrement())
  studentId String   @unique
  firstName String
  lastName  String
  username  String   @unique
  email     String   @unique
  role      Role     @default(user)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Period {
  MORNING
  AFTERNOON
  EVENING
}

enum Study_day {
  MON
  TUE
  WED
  THU
  FRI
  SAT
  SUN
}

model Subjects {
  id           Int       @id @default(autoincrement())
  subject_id   String    @unique
  subject_name String
  teacher_name String
  study_day    Study_day
  time_start   String
  time_end     String
  period       Period
  room         String
  createAt     DateTime  @default(now())
  updateAt     DateTime  @default(now()) @updatedAt

  works Works[]
}

model Works {
  id           Int       @id @default(autoincrement())
  subject_id   String
  subject      Subjects  @relation(fields: [subject_id], references: [subject_id])
  title        String
  description  String?
  assignedDate DateTime
  dueDate      DateTime
  link         String?
  linkCode     String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  images       Images[]  
}

model Images {
  id        Int    @id @default(autoincrement())
  workId    Int
  url       String
  fileId    String
  work      Works  @relation(fields: [workId], references: [id] , onDelete: Cascade)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}